#!/bin/sh

set -e

# Create zram configuration
cat > /etc/systemd/system/zram-config.service << 'EOFS'
[Unit]
Description=Configure zram swap device
After=local-fs.target

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/zram-config.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOFS

# Create configuration script
cat > /usr/local/sbin/zram-config.sh << 'EOFS'
#!/bin/sh

# Get total memory in kB
mem_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')

# Adaptive ZRAM sizing:
# Use 25% for systems with 8GB or less RAM
# Use 50% for systems with more than 8GB RAM
if [ $mem_total -le 8388608 ]; then  # 8GB in KB
    zram_size=$((mem_total * 1024 / 4))  # 25%
else
    zram_size=$((mem_total * 1024 / 2))  # 50%
fi

# Load zram module
modprobe zram

# Configure zstd compression algorithm
echo zstd > /sys/block/zram0/comp_algorithm

# Set adaptive zram size
echo $zram_size > /sys/block/zram0/disksize

# Create swap on zram device
mkswap --label zram0 /dev/zram0

# Enable swap with high priority (-10)
swapon -p -10 /dev/zram0

# Optimize swap and cache settings
# Lower swappiness for systems with less RAM to reduce swap usage
if [ $mem_total -le 8388608 ]; then
    sysctl -w vm.swappiness=80  # More conservative for smaller RAM
else
    sysctl -w vm.swappiness=100
fi
sysctl -w vm.vfs_cache_pressure=50
EOFS

# Make script executable
chmod +x /usr/local/sbin/zram-config.sh

# Enable service
systemctl enable zram-config.service
